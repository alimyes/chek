name: Sparse commit to a repository
description: Sparse checkout and commit to a single file of any git repository.
author: zitros
branding:
  icon: git-commit
  color: orange
inputs:
  repository:
    required: true
    description: URL of a repository to check out. Include credentials to this URL if needed.
  filename:
    required: true
    description: A name of a file to commit, including directories, if any. Directories that do not exist will be created.
  file-content:
    required: true
    description: A content of the file to commit.
  git-user-name:
    required: true
    description: The user name that will appear in git commit.
  temp-dir:
    required: false
    description: A temp directory where repository will be checked out.
    default: temp-git-sparse-commit-${{ github.sha }}
  git-user-email:
    required: false
    description: The user email that will appear in git commit.
    default: ''
  git-commit-message:
    required: false
    description: A commit message to use.
    default: Automated file update
runs:
  using: composite
  steps:
    - name: Set shell variables
      shell: bash
      run: |
          echo "DIRTEMP=${{ inputs.temp-dir }}" >> $GITHUB_ENV
          echo "EMAIL=${{ inputs.git-user-email }}" >> $GITHUB_ENV

    - name: Clone repository
      shell: bash
      run: |
          git clone --filter=blob:none --no-checkout --depth 1 --sparse ${{ inputs.repository }} $DIRTEMP
          
    - name: Init sparse checkout
      shell: bash
      run: |
          git -C $DIRTEMP sparse-checkout init --cone
          
    - name: Reset a commit contents
      shell: bash
      run: |
          git -C $DIRTEMP restore --staged .

    - name: Create subdirectories
      shell: bash
      run: |
          mkdir -p $DIRTEMP/$(dirname "${{ inputs.filename }}")

    - name: Write to a file
      shell: bash
      run: |
          echo '${{ inputs.file-content }}' > "$DIRTEMP/${{ inputs.filename }}"

    - shell: bash
      run: |
          git -C $DIRTEMP sparse-checkout add $(dirname "${{ inputs.filename }}")

    - shell: bash
      run: |
          git -C $DIRTEMP add "${{ inputs.filename }}"
          
    - shell: bash
      run: |
          git -C $DIRTEMP status

    - name: Commit and push
      shell: bash
      run: |
          git -C $DIRTEMP config user.name "${{ inputs.git-user-name }}"
          git -C $DIRTEMP config user.email "${EMAIL:-${{ inputs.git-user-name }}@users.noreply.github.com}"
          git -C $DIRTEMP commit -m '${{ inputs.git-commit-message }}' ${{ inputs.filename }}
          git -C $DIRTEMP push
